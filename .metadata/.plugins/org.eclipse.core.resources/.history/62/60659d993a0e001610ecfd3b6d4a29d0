/* ***************************************************************** */
/* File name:        buzzer.c                                        */
/* File description: File dedicated to the hardware abstraction layer*/
/*                   related buzzer from the peripheral board        */
/* Author name:      dloubach                                        */
/* Creation date:    12jan2016                                       */
/* Revision date:    21jan2016                                       */
/* ***************************************************************** */

#include "buzzer.h"
#include "../es670_peripheral_board.h"
#include "../util/util.h"

/* system includes */
#include <MKL25Z4.h>

uint8_t buzzer_buzzer_period;

/* ************************************************ */
/* Method name:        buzzer_init                  */
/* Method description: Initialize the buzzer device */
/* Input params:       n/a                          */
/* Output params:      n/a                          */
/* ************************************************ */
void buzzer_init(void)
{
    /* un-gate port clock */
    SIM_SCGC5 = SIM_SCGC5_PORTD(0x01);

    /* set pin as gpio */
    PORTD_PCR0 = PORT_PCR_MUX(0x01);

    /* set pin as digital output */
    GPIOD_PDDR = GPIO_PDDR_PDD(0x01);

    buzzer_buzzer_period = 0;

}



/* ************************************************ */
/* Method name:        buzzer_clearBuzz             */
/* Method description: Clear the buzzer             */
/* Input params:       n/a                          */
/* Output params:      n/a                          */
/* ************************************************ */
void buzzer_clearBuzz(void)
{
    /* clear desired pin */
    GPIOD_PCOR = GPIO_PCOR_PTCO(0x01);

}



/* ************************************************ */
/* Method name:        buzzer_setBuzz               */
/* Method description: Set the buzzer               */
/* Input params:       n/a                          */
/* Output params:      n/a                          */
/* ************************************************ */
void buzzer_setBuzz(void)
{
    /* set desired pin */
    GPIOD_PSOR = GPIO_PSOR_PTSO(0x01);

}

void buzzer_setPeriod(uint8_t milliseconds)
{
	buzzer_buzzer_period = milliseconds;
}

void buzzer_Buzz()
{
	if(buzzer_buzzer_period < 10) return;
	buzzer_setBuzz();
	for (uint8_t high = 0; high < buzzer_buzzer_period/10; high++) util_genDelay1ms();
	buzzer_clearBuzz();
	for (uint8_t low = 0; low < buzzer_buzzer_period - buzzer_buzzer_period/10; low++) util_genDelay1ms();
	return;

}

